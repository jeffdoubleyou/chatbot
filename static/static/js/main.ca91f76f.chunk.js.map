{"version":3,"sources":["assets/Sean.png","App.js","reportWebVitals.js","index.js"],"names":["App","wrapper","useRef","useEffect","window","ChatSDK","root","current","config","navbar","title","robot","avatar","messages","type","content","text","requests","send","msg","url","data","q","handlers","parseResponse","res","requestType","len","length","map","item","index","answer","join","run","style","height","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oJAAe,G,UAAA,IAA0B,kC,OCI1B,SAASA,IACtB,IAAMC,EAAUC,mBA6DhB,OA3DAC,qBAAU,WACI,IAAIC,OAAOC,QAAQ,CAC7BC,KAAML,EAAQM,QACdC,OAAQ,CACNC,OAAQ,CACNC,MAAO,4BAETC,MAAO,CACLC,OAAQA,GAEVC,SAAU,CACR,CACEC,KAAM,OACNC,QAAS,CACPC,KAAM,yHAKdC,SAAU,CAERC,KAAM,SAAUC,GAAM,IACZL,EAAkBK,EAAlBL,KAAMC,EAAYI,EAAZJ,QACd,GAAa,SAATD,EACF,MAAO,CACLM,IAAK,oCACLC,KAAM,CACJC,EAAGP,EAAQC,SAOrBO,SAAU,CAERC,cAAe,SAAUC,EAAKC,GAC5B,IAAIX,EAAU,6CACd,GAAoB,SAAhBW,GAA0BD,EAAIJ,KAAM,CACtC,IAAMA,EAAOI,EAAIJ,KACXM,EAAMN,EAAKO,OACjBb,EAAUM,EAAKQ,KAAI,SAACC,EAAMC,GAAW,IAC3BC,EAAWF,EAAXE,OACR,OAAY,IAARL,EAAkBK,EAChB,GAAN,OAAUD,EAAQ,EAAlB,YAAuBC,EAAvB,SACCC,KAAK,IAEV,MAAO,CACLnB,KAAM,OACNC,QAAS,CACPC,KAAMD,QAMZmB,QACH,IAEI,qBAAKC,MAAO,CAAEC,OAAQ,QAAUC,IAAKpC,IClE9C,IAYeqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ca91f76f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Sean.ad9b1478.png\";","import React, { useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport avatar from './assets/Sean.png'\n\nexport default function App() {\n  const wrapper = useRef();\n\n  useEffect(() => {\n    const bot = new window.ChatSDK({\n      root: wrapper.current,\n      config: {\n        navbar: {\n          title: \"智能助理\"\n        },\n        robot: {\n          avatar: avatar\n        },\n        messages: [\n          {\n            type: \"text\",\n            content: {\n              text: \"智能助理为您服务，请问有什么可以帮您？\"\n            }\n          }\n        ]\n      },\n      requests: {\n        /* ... */\n        send: function (msg) {\n          const { type, content } = msg;\n          if (type === 'text') {\n            return {\n              url: 'http://10.12.78.42:8080/v1/search',\n              data: {\n                q: content.text\n              }\n            }\n          }\n\n        }\n      },\n      handlers: {\n        /* ... */\n        parseResponse: function (res, requestType) {\n          let content = '不明白你的问题'\n          if (requestType === 'send' && res.data) {\n            const data = res.data;\n            const len = data.length;\n            content = data.map((item, index) => {\n              const { answer } = item;\n              if (len === 1) return answer;\n              return `${index + 1}.${answer}\\n`\n            }).join('')\n          }\n          return {\n            type: 'text',\n            content: {\n              text: content\n            }\n          }\n        }\n      }\n    });\n    bot.run();\n  }, []);\n\n  return <div style={{ height: \"100%\" }} ref={wrapper} />;\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}